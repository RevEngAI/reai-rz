name: Create Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release tag name'
        required: true
        default: 'v0.1.0'
      prerelease:
        description: 'Mark as prerelease'
        required: false
        default: false
        type: boolean

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download Linux artifacts
      uses: dawidd6/action-download-artifact@v6
      with:
        workflow: build-linux.yml
        name: reai-rz-linux-binaries
        path: release-artifacts/linux/
        if_no_artifact_found: warn
        
    - name: Download macOS artifacts
      uses: dawidd6/action-download-artifact@v6
      with:
        workflow: build-macos.yml
        name: reai-rz-macos-binaries
        path: release-artifacts/macos/
        if_no_artifact_found: warn
        
    - name: Download Windows artifacts
      uses: dawidd6/action-download-artifact@v6
      with:
        workflow: build-windows.yml
        name: reai-rz-windows-binaries
        path: release-artifacts/windows/
        if_no_artifact_found: warn
        
    - name: Create release packages
      run: |
        cd release-artifacts/
        
        # List what we downloaded
        echo "Downloaded artifacts:"
        find . -type f | sort
        
        # Create platform-specific packages
        if [ -d "linux" ]; then
          echo "Creating Linux package..."
          tar -czf "reai-rz-linux.tar.gz" -C linux .
          echo "✅ Created reai-rz-linux.tar.gz"
        fi
        
        if [ -d "macos" ]; then
          echo "Creating macOS package..."
          tar -czf "reai-rz-macos.tar.gz" -C macos .
          echo "✅ Created reai-rz-macos.tar.gz"
        fi
        
        if [ -d "windows" ]; then
          echo "Creating Windows package..."
          cd windows && zip -r "../reai-rz-windows.zip" . && cd ..
          echo "✅ Created reai-rz-windows.zip"
        fi
        
        # List final packages
        echo "Created release packages:"
        ls -la *.tar.gz *.zip 2>/dev/null || echo "No packages were created"
        
    - name: Get tag name
      id: tag_name
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "tag_name=${{ github.event.inputs.tag_name }}" >> $GITHUB_OUTPUT
          echo "prerelease=${{ github.event.inputs.prerelease }}" >> $GITHUB_OUTPUT
        else
          echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "prerelease=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag_name.outputs.tag_name }}
        name: RevEngAI Rizin Plugin ${{ steps.tag_name.outputs.tag_name }}
        draft: false
        prerelease: ${{ steps.tag_name.outputs.prerelease }}
        generate_release_notes: true
        files: |
          release-artifacts/*.tar.gz
          release-artifacts/*.zip
        body: |
          ## RevEngAI Rizin Plugin Release ${{ steps.tag_name.outputs.tag_name }}
          
          This release contains the RevEngAI plugin for both **Rizin** and **Cutter** with automated install scripts.
          
          ### 📦 Downloads
          
          | Platform | Download | Contents |
          |----------|----------|----------|
          | 🐧 **Linux** | `reai-rz-linux.tar.gz` | Rizin + Cutter plugins + install script |
          | 🍎 **macOS** | `reai-rz-macos.tar.gz` | Rizin + Cutter plugins + install script |
          | 🪟 **Windows** | `reai-rz-windows.zip` | Rizin + Cutter plugins + install script |
          
          ### 📋 What's Included
          
          **Linux:**
          - 🔌 `libreai_rizin.so` - Rizin plugin  
          - 🎨 `libreai_cutter.so` - Cutter plugin
          - 📚 `libreai.so` - RevEngAI runtime library
          - 🚀 `install-linux.sh` - Automated installer with rpath fixing
          
          **macOS:**
          - 🔌 `libreai_rizin.dylib` - Rizin plugin
          - 🎨 `libreai_cutter.so` - Cutter plugin (MODULE library uses .so extension)
          - 📚 `libreai.dylib` - RevEngAI runtime library
          - 🚀 `install-macos.sh` - Automated installer with rpath fixing
          
          **Windows:**
          - 🔌 `libreai_rizin.dll` - Rizin plugin
          - 🎨 `libreai_cutter.dll` - Cutter plugin
          - 📚 `reai.dll` + `reai.lib` - RevEngAI runtime library
          - 🌐 `libcurl.dll` + `libcurl_imp.lib` - HTTP client library
          - 🚀 `install-windows.ps1` - Automated installer with PATH setup
          
          ### 🚀 Installation (Recommended)
          
          **🎯 Use the included install scripts for best results:**
          
          #### Linux
          ```bash
          # Download and extract
          wget https://github.com/RevEngAI/reai-rz/releases/download/${{ steps.tag_name.outputs.tag_name }}/reai-rz-linux.tar.gz
          tar -xzf reai-rz-linux.tar.gz
          cd reai-rz-linux
          
          # Run automated installer (requires patchelf)
          sudo apt install patchelf  # Ubuntu/Debian
          chmod +x install-linux.sh
          ./install-linux.sh
          ```
          
          #### macOS  
          ```bash
          # Download and extract
          curl -L -O https://github.com/RevEngAI/reai-rz/releases/download/${{ steps.tag_name.outputs.tag_name }}/reai-rz-macos.tar.gz
          tar -xzf reai-rz-macos.tar.gz
          cd reai-rz-macos
          
          # Run automated installer (requires Xcode tools)
          xcode-select --install  # if not already installed
          chmod +x install-macos.sh
          ./install-macos.sh
          ```
          
          #### Windows
          ```powershell
          # Download and extract (PowerShell)
          Invoke-WebRequest "https://github.com/RevEngAI/reai-rz/releases/download/${{ steps.tag_name.outputs.tag_name }}/reai-rz-windows.zip" -OutFile "reai-rz-windows.zip"
          Expand-Archive "reai-rz-windows.zip" -Force
          cd reai-rz-windows
          
          # Run automated installer
          .\install-windows.ps1
          ```
          
          ### 🛠️ What The Install Scripts Do
          
          The install scripts provide **intelligent, platform-specific installation**:
          
          - ✅ **Install libraries** to proper user directories (`~/.local/lib/`)
          - ✅ **Install Rizin plugin** to `$(rizin -H RZ_USER_PLUGINS)`
          - ✅ **Install Cutter plugin** to platform-specific Cutter plugin directory
          - ✅ **Fix rpath/library paths** so plugins can find dependencies
          - ✅ **Set up environment** with helper scripts for easy usage
          - ✅ **Verify installation** and provide clear success/error messages
          
          ### 📋 Manual Installation (Advanced)
          
          If you prefer manual installation or the scripts don't work:
          
          #### Exact File Locations
          
          **Shared Libraries:**
          - Linux: `~/.local/lib/libreai.so`
          - macOS: `~/.local/lib/libreai.dylib`  
          - Windows: `%USERPROFILE%\.local\bin\reai.dll` + `%USERPROFILE%\.local\lib\reai.lib`
          
          **Rizin Plugin:**
          - All platforms: Copy to `$(rizin -H RZ_USER_PLUGINS)`
          
          **Cutter Plugin:**
          - Linux: `~/.local/share/rizin/cutter/plugins/native/`
          - macOS: `~/Library/Application Support/rizin/cutter/plugins/native/`
          - Windows: `%APPDATA%\rizin\cutter\plugins\native\`
          
          **⚠️ Important:** On Unix systems, you may need to set environment variables:
          ```bash
          export LD_LIBRARY_PATH="$HOME/.local/lib:$LD_LIBRARY_PATH"  # Linux
          export DYLD_LIBRARY_PATH="$HOME/.local/lib:$DYLD_LIBRARY_PATH"  # macOS
          ```
          
          ### ✅ Verification
          
          After installation, verify both plugins work:
          
          **Rizin:**
          ```bash
          rizin -
          [0x00000000]> REh
          # Should display RevEngAI plugin help
          ```
          
          **Cutter:**
          - Launch Cutter
          - Check **Plugins** menu for RevEngAI options
          - Or check **Edit** → **Preferences** → **Plugins** for loaded plugins
          
          ### 📝 Configuration
          
          Create a configuration file at `~/.creait` in `key=value` per line format:
          ```
          api_key = YOUR_REVENGAI_API_KEY
          host = https://api.reveng.ai
          ```
          
          ### 🔧 Requirements
          
          - **Rizin 0.8.0** or compatible version
          - **Cutter 2.4.0+** (optional, for GUI plugin)
          - **Internet connection** for RevEngAI API access
          - **Valid RevEngAI API key** from https://portal.reveng.ai
          
          **Platform-specific:**
          - **Linux:** `patchelf` tool for rpath fixing
          - **macOS:** Xcode command line tools for rpath fixing  
          - **Windows:** PowerShell (included with Windows)
          
          ### 🐛 Issues & Support
          
          - 📋 **Installation issues:** Check the install script output for detailed error messages
          - 🔧 **Plugin not loading:** Verify environment variables are set (see install script output)
          - 🌐 **API issues:** Verify your API key and configuration file
          - 🐛 **Bug reports:** https://github.com/RevEngAI/reai-rz/issues
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
