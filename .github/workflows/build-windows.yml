name: Build Windows

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v1.1
      
    - name: Setup Visual Studio Developer Environment
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64
        
    - name: Build project with Python venv
      run: |
        # Run the build script which now handles venv setup internally
        Set-ExecutionPolicy Bypass -Scope Process -Force
        .\Scripts\Build.ps1
      shell: powershell
      
    - name: Collect runtime binaries
      run: |
        New-Item -ItemType Directory -Force -Path "artifacts"
        
        $InstallPath = "$env:USERPROFILE\.local\RevEngAI\Rizin\Install"
        
        # Collect reai.dll from exact location
        $ReaiDllPath = "$InstallPath\bin\reai.dll"
        if (Test-Path $ReaiDllPath) {
          Copy-Item $ReaiDllPath "artifacts\"
          Write-Host "✅ Collected: reai.dll"
        } else {
          Write-Host "❌ reai.dll NOT FOUND at: $ReaiDllPath"
          exit 1
        }
        
        # Collect reai.lib from exact location  
        $ReaiLibPath = "$InstallPath\lib\reai.lib"
        if (Test-Path $ReaiLibPath) {
          Copy-Item $ReaiLibPath "artifacts\"
          Write-Host "✅ Collected: reai.lib"
        } else {
          Write-Host "❌ reai.lib NOT FOUND at: $ReaiLibPath"
          exit 1
        }
        
        # Collect libcurl.dll from exact location
        $CurlDllPath = "$InstallPath\bin\libcurl.dll"
        if (Test-Path $CurlDllPath) {
          Copy-Item $CurlDllPath "artifacts\"
          Write-Host "✅ Collected: libcurl.dll"
        } else {
          Write-Host "❌ libcurl.dll NOT FOUND at: $CurlDllPath"
          exit 1
        }
        
        # Collect libcurl_imp.lib from exact location
        $CurlLibPath = "$InstallPath\lib\libcurl_imp.lib"
        if (Test-Path $CurlLibPath) {
          Copy-Item $CurlLibPath "artifacts\"
          Write-Host "✅ Collected: libcurl_imp.lib"
        } else {
          Write-Host "❌ libcurl_imp.lib NOT FOUND at: $CurlLibPath"
          exit 1
        }
        
        # Collect rizin plugin from exact location
        $RizinPluginDir = "$env:USERPROFILE\.local\lib\rizin\plugins"
        $RizinPlugin = Get-ChildItem $RizinPluginDir -Filter "*reai_rizin*.dll" -ErrorAction SilentlyContinue | Select-Object -First 1
        if ($RizinPlugin) {
          Copy-Item $RizinPlugin.FullName "artifacts\"
          Write-Host "✅ Collected: $($RizinPlugin.Name)"
        } else {
          Write-Host "❌ reai_rizin plugin NOT FOUND in: $RizinPluginDir"
          exit 1
        }
        
        # Collect cutter plugin from exact location
        $CutterPluginDir = "$env:APPDATA\rizin\cutter\plugins\native"
        $CutterPlugin = Get-ChildItem $CutterPluginDir -Filter "*reai_cutter*.dll" -ErrorAction SilentlyContinue | Select-Object -First 1
        if ($CutterPlugin) {
          Copy-Item $CutterPlugin.FullName "artifacts\"
          Write-Host "✅ Collected: $($CutterPlugin.Name)"
        } else {
          Write-Host "❌ reai_cutter plugin NOT FOUND in: $CutterPluginDir"
          exit 1
        }
        
        # Verify all essential files collected
        $files = Get-ChildItem "artifacts"
        Write-Host "`n=== Build Summary ==="
        Write-Host "✅ reai.dll: Found"
        Write-Host "✅ reai.lib: Found"
        Write-Host "✅ libcurl.dll: Found" 
        Write-Host "✅ libcurl_imp.lib: Found"
        Write-Host "✅ Rizin Plugin: Found"
        Write-Host "✅ Cutter Plugin: Found"
        Write-Host "`nCollected files:"
        $files | ForEach-Object { Write-Host "  $($_.Name) ($($_.Length) bytes)" }
      shell: powershell
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: reai-rz-windows-binaries
        path: artifacts/
        if-no-files-found: error